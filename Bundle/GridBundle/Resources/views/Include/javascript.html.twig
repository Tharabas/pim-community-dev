{{ oro_filter_render_header_javascript() }}

{% set datagrid = datagridView.datagrid %}
{% set form     = datagridView.formView %}

<script type="text/javascript">
    {% set idSuffix = random() %}
    {% set templateElId = datagrid.name ~ '-datagrid-template-' ~ idSuffix %}
    {% set filtersElId = datagrid.name ~ '-datagrid-filters-' ~ idSuffix %}
    {% set bodyElId = datagrid.name ~ '-datagrid-body-' ~ idSuffix %}

    {% set columnTypePrefix = 'Oro\\Bundle\\GridBundle\\Field\\FieldDescriptionInterface::' %}
    {% set actionTypePrefix = 'Oro\\Bundle\\GridBundle\\Action\\ActionInterface::' %}
    {% set parameterTypePrefix = 'Oro\\Bundle\\GridBundle\\Datagrid\\ParametersInterface::' %}

    {% set datagridParameters = [] %}
    {% if datagrid.name in datagrid.parameters|keys %}
        {% set datagridParameters = datagrid.parameters[datagrid.name] %}
    {% endif %}

    {% set parametersSorterType = constant(parameterTypePrefix ~ 'SORT_PARAMETERS') %}
    {% set parametersFilterType = constant(parameterTypePrefix ~ 'FILTER_PARAMETERS') %}

    {% set sorterData = [] %}
    {% if parametersSorterType in datagridParameters|keys %}
        {% set sorterData = datagridParameters[parametersSorterType] %}
    {% endif %}

    {% set filterData = [] %}
    {% if parametersFilterType in datagridParameters|keys %}
        {% set filterData = datagridParameters[parametersFilterType] %}
    {% endif %}

    {% set entityHint = datagrid.entityHint ? datagrid.entityHint : 'records' %}

    $(function() {
        var datagridOptions = {
            grid: {
                columns: [
                    {% for column in datagrid.columns %}
                    {
                        name: {{ column.name|json_encode|raw }},
                        label: {{ column.label|json_encode|raw }},
                        renderable: {{ column.shown|json_encode|raw }},
                        sortable: {{ column.sortable|json_encode|raw }},
                        editable: {{ column.editable|json_encode|raw }},
                        {% if column.type == constant(columnTypePrefix ~ 'TYPE_DATE') %}
                            cell: Oro.Datagrid.Cell.MomentCell.extend({
                                modelFormat:   "YYYY-MM-DD",
                                displayFormat: "MM/DD/YYYY"
                            })
                        {% elseif column.type == constant(columnTypePrefix ~ 'TYPE_DATETIME') %}
                            cell: Oro.Datagrid.Cell.MomentCell.extend({
                                modelFormat:   "YYYY-MM-DD hh:mm:ss",
                                displayFormat: "MM/DD/YYYY hh:mm a"
                            })
                        {% elseif column.type == constant(columnTypePrefix ~ 'TYPE_DECIMAL') %}
                            cell: Oro.Datagrid.Cell.NumberCell
                        {% elseif column.type == constant(columnTypePrefix ~ 'TYPE_INTEGER') %}
                            cell: Oro.Datagrid.Cell.IntegerCell.extend({ orderSeparator: '' })
                        {% elseif column.type == constant(columnTypePrefix ~ 'TYPE_BOOLEAN') %}
                            cell: Oro.Datagrid.Cell.BooleanCell,
                            width: 10
                        {% elseif column.type == constant(columnTypePrefix ~ 'TYPE_HTML') %}
                            cell: Oro.Datagrid.Cell.HtmlCell
                        {% elseif column.type == constant(columnTypePrefix ~ 'TYPE_OPTIONS') and column.getOption('choices') %}
                            cell: Oro.Datagrid.Cell.SelectCell.extend({
                                choices: {{ column.getOption('choices')|json_encode|raw }}
                            })
                        {% else %}
                            cell: Oro.Datagrid.Cell.StringCell
                        {% endif %}
                    }{% if not loop.last %},{% endif %}
                    {% endfor %}
                ],
                filters: {
                    {% for filter in datagrid.filters %}
                        {{ filter.name|json_encode|raw }} : {{ oro_filter_render_filter_javascript(form.children[filter.name]) }}
                        {% if not loop.last %},{% endif %}
                    {% endfor %}
                },
                rowActions: {
                    {% for action in datagrid.rowActions %}
                        {{ action.name|json_encode|raw }}:
                        {% set currentOptions = action.options %}
                        {% if action.type == constant(actionTypePrefix ~ 'TYPE_DELETE') %}
                            Oro.Datagrid.Action.DeleteAction.extend({{ currentOptions|json_encode|raw }})
                        {% else %}
                            {# merge additional options to navigateAction to use execute method #}
                            {% set currentOptions = currentOptions|merge({'launcherOptions': {'onClickReturnValue': false, 'runAction': true, 'className': 'no-hash'}}) %}
                            Oro.Datagrid.Action.NavigateAction.extend({{ currentOptions|json_encode|raw }})
                        {% endif %}
                        {% if not loop.last %},{% endif %}
                    {% endfor %}
                },
                entityHint : {{ datagrid.entityHint|capitalize|json_encode|raw }},
                noDataHint : {{ 'oro_grid.no_data_hint %entityHint%'|trans({'%entityHint%': entityHint}, 'OroGridBundle')|json_encode|raw }}
            },
            collection: {
                inputName: {{ datagrid.name|json_encode|raw }},
                url: {{ datagrid.routeGenerator.generateUrl(null, {'_format': 'json'})|json_encode|raw }},
                state: {
                    currentPage:  {{ datagrid.pager.page|json_encode|raw }},
                    pageSize:     {{ datagrid.pager.maxPerPage|json_encode|raw }},
                    totalRecords: {{ datagrid.pager.nbResults|json_encode|raw }},
                    filters:      {{ filterData ? filterData|json_encode|raw : '{}' }},
                    sorters:      {{ sorterData ? sorterData|json_encode|raw : '{}' }}
                }
            },
            results: {{ oro_grid_render_results_json(datagridView) }}
        };

        var containerSelector = {{ selector|json_encode|raw }};
        var datagridTemplateSelector = {{ ("#" ~ templateElId)|json_encode|raw }};
        var datagridFiltersSelector = {{ ("#" ~ filtersElId)|json_encode|raw }};
        var datagridBodySelector = {{ ("#" ~ bodyElId)|json_encode|raw }};

        var initDatagrid = function(
            datagridOptions,
            datagridTemplateSelector,
            containerSelector,
            datagridFiltersSelector,
            datagridBodySelector
        ) {
            var datagridCollection = {};
            // Initialize grid collection
            datagridCollection.collection = new Oro.PageableCollection(
                datagridOptions.results,
                _.extend({parse: true}, datagridOptions.collection)
            );
            Oro.Events.trigger("datagrid_collection_set_after", datagridCollection);
            // Basic grid layout
            var template = _.template($(datagridTemplateSelector).html());
            $(containerSelector).append(template);

            // Grid
            var datagridParameters = _.extend({
                collection: datagridCollection.collection,
                loadingMask: Oro.LoadingMask.extend({
                    loadingHint: {{ 'oro_grid.label_loading_mask'|trans({}, 'OroGridBundle')|json_encode|raw }}
                })
            }, datagridOptions.grid);
            var datagrid = new Oro.Datagrid.Grid(datagridParameters);
            $(datagridBodySelector).html(datagrid.render().$el);
            Oro.Registry.setElement('datagrid', {{ datagrid.name|json_encode|raw }}, datagrid);

            // Title
            var titleParameters = _.extend({
                tagName: 'div',
                className: 'navigation container-fluid'
            }, datagridOptions.grid);

            // Filters
            var filterListParameters = _.extend({
                addButtonHint: {{ 'oro_grid.label_add_filter'|trans({}, 'OroGridBundle')|json_encode|raw }},
                collection: datagridCollection.collection
            }, datagridOptions.grid);
            var filtersList = new Oro.Datagrid.Filter.List(filterListParameters);
            $(datagridFiltersSelector).html(filtersList.render().$el);
            /**
             * @event datagrid_filters:initialized
             */
            Oro.Events.trigger("datagrid_filters:rendered", datagridCollection.collection);

            {# Don't use router when grid is embedded in dialog #}
            {% if app.request.get('_widgetContainer') != 'dialog' %}
                // Register router and start history
                var router = new Oro.Datagrid.Router({
                    collection: datagridCollection.collection
                });
            {% endif %}
        };

        initDatagrid(
            datagridOptions,
            datagridTemplateSelector,
            containerSelector,
            datagridFiltersSelector,
            datagridBodySelector
        );
        if (!Backbone.History.started) {
            Backbone.history.start();
        }
    });
</script>

<script type="text/template" id="{{ templateElId }}">
    <div class="clearfix" id="{{ filtersElId }}"></div>
    <div class="clearfix" id="{{ bodyElId }}"></div>
</script>
